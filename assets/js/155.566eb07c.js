(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{646:function(v,_,t){"use strict";t.r(_);var a=t(2),i=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"登陆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#登陆"}},[v._v("#")]),v._v(" 登陆")]),v._v(" "),t("h3",{attrs:{id:"使用了vant的field组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用了vant的field组件"}},[v._v("#")]),v._v(" 使用了vant的Field组件")]),v._v(" "),t("ul",[t("li",[v._v("用户名  ：前端校验规则---不小于两位")]),v._v(" "),t("li",[v._v("密码  ：前端校验规则---不小于六位")]),v._v(" "),t("li",[v._v("登录按钮  ：\n"),t("ol",[t("li",[v._v("当前端校验不通过时，使用vant的轻提示toast组件提示，")]),v._v(" "),t("li",[v._v("当通过了前端校验，需要使用md5.js库对密码进行加密；")]),v._v(" "),t("li",[v._v("使用axios请求登录接口，并将账户密码发送给后端，")]),v._v(" "),t("li",[v._v("后端返回数据，通过后端数据包里的code码在全局api.js文件里在处理，如果code码为0，直接提示用户，账户或密码错误")]),v._v(" "),t("li",[v._v("如果为1,将返回的数据存入vuex，并使用vue-router导航到首页，")]),v._v(" "),t("li",[v._v("返回的数据：\n"),t("ul",[t("li",[v._v("uid（用户id:每一个接口都需要带上）")]),v._v(" "),t("li",[v._v("username(用户名)")]),v._v(" "),t("li",[v._v("token值（我们将其放入cookie里 后端会根据token值判断用户是否合法)；cookie会随着http请求发送到服务器\ntoken里面包括：本次登录时间，当前密码的后三位，设备的ip地址 ，一些混淆的值")]),v._v(" "),t("li",[v._v("loginState：（登录状态） 0 失败 1成功")]),v._v(" "),t("li",[v._v("shopid ：购物车id值，用来在购物车页面获取数据的")]),v._v(" "),t("li",[v._v("shoplen ： 购物车数据的条数")]),v._v(" "),t("li",[v._v("dzid：（订单id）用来在订单页面中获取订单数据的")]),v._v(" "),t("li",[v._v("dzlen：订单条数")]),v._v(" "),t("li",[v._v("head ：头像地址  例如 http：//asdads.png")])])])])])]),v._v(" "),t("h2",{attrs:{id:"首页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首页"}},[v._v("#")]),v._v(" 首页")]),v._v(" "),t("ol",[t("li",[v._v("当首页被打开时，在mounted钩子函数中，发起自动请求返回的数据分别传给焦点图组件，产品分类组件，热门产品组件；")]),v._v(" "),t("li",[v._v("首页组成部分")])]),v._v(" "),t("h3",{attrs:{id:"焦点图-baner-轮播图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#焦点图-baner-轮播图"}},[v._v("#")]),v._v(" 焦点图---baner（轮播图）")]),v._v(" "),t("ul",[t("li",[v._v("使用vant里的swipe组件，接收一个data数据，使用v-for遍历data数据包，渲染swipe-item；")]),v._v(" "),t("li",[v._v("在swipeItem组件上利用to属性，使用data数据的id值拼接成导航地址")]),v._v(" "),t("li",[v._v("轮播是一个高复用的组件所以放在了components目录里，首页会用到，产品详情页也用到了")])]),v._v(" "),t("h4",{attrs:{id:"产品分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#产品分类"}},[v._v("#")]),v._v(" 产品分类")]),v._v(" "),t("ul",[t("li",[v._v("使用vant-grid开发的，该组件接收父组件传入的data数据，进行遍历，使用该组件上的to属性，拼接动态导航地址")]),v._v(" "),t("li",[v._v("当我们带点击分类的时候，会跳转到产品列表的动态路由里，产品列表组件会获取我们传过去的id值\n"),t("ol",[t("li",[v._v("产品列表页：获取id值，在mounted函数中请求分类的数据，渲染产品列表，并且每个列表项也是to拼接成动态路由导航")]),v._v(" "),t("li",[v._v("点击产品列表项，会跳到产品详情页，详情页就会拿到这个产品的id值，在mounted请求产品详情数据，最终渲染")])])])]),v._v(" "),t("h4",{attrs:{id:"热门产品"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#热门产品"}},[v._v("#")]),v._v(" 热门产品")]),v._v(" "),t("ul",[t("li",[v._v("使用vant-grid开发的，接收data数据，使用to属性拼接id值，生成动态路由导航；")]),v._v(" "),t("li",[v._v("点击时进入产品详情也，详情页会获取id值，在mounted请求产品详情数据，最终渲染")])]),v._v(" "),t("h4",{attrs:{id:"底部一级导航"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#底部一级导航"}},[v._v("#")]),v._v(" 底部一级导航")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("首页")])]),v._v(" "),t("li",[t("p",[v._v("购物车")])]),v._v(" "),t("li",[t("p",[v._v("订单")])]),v._v(" "),t("li",[t("p",[v._v("用户")])])]),v._v(" "),t("h2",{attrs:{id:"购物车"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#购物车"}},[v._v("#")]),v._v(" 购物车")]),v._v(" "),t("p",[v._v("使用vant-card + checkbox")]),v._v(" "),t("h3",{attrs:{id:"数据逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据逻辑"}},[v._v("#")]),v._v(" 数据逻辑")]),v._v(" "),t("ol",[t("li",[v._v("进入购物车页面后从vuex的用户数据中获取购物车id值，在 mounted 函数中用接口请求购物车数据")]),v._v(" "),t("li",[v._v("购物车导航上的数量标识是用的vuex 里购物车数据的条数")]),v._v(" "),t("li",[v._v("开发流程\n"),t("ul",[t("li",[v._v("全选按钮将购物车的所有产品全部购买 --- 金额是产品的数量乘以产品的单价;")]),v._v(" "),t("li",[v._v("产品的单选，只购买该产品的金额 --- 数量乘以单价;")]),v._v(" "),t("li",[v._v("全选按钮上，使用click事件来控制购物车产品列表里的复选框;")]),v._v(" "),t("li",[v._v("使用watch监听产品列表数据的 checked ，从而计算出总价钱;")])])]),v._v(" "),t("li",[v._v("当用户进入购物车钱需路由守卫拦截判断用户是否登录，没有登录去登录，跳到登录页面;")]),v._v(" "),t("li",[v._v("结算：判断总价不为零；发起结算接口，并且传入uid、购物车shopid，产品id 、总价total 、数里count;")]),v._v(" "),t("li",[v._v("结算接口返回成功之后，会返回一个订单编号和总价，我们通过路由跳到支付页面，通过订单编号获取要结算的产品，用户点击支付按钮唤起密码框.")])]),v._v(" "),t("p",[t("font",{attrs:{color:"red"}},[v._v("*")]),v._v(" 开发该页面时遇到的问题：")],1),v._v(" "),t("ol",[t("li",[v._v("全选按钮和列表数据都通过 watch 监听，会出现一个bug；这个bug就是当我们全选后，只要取消了一个产品里的复选框，那么所有的产品的复选框都被取消了;")]),v._v(" "),t("li",[v._v("全选按钮不要放在watch监听了，用 click 的方式来触发全选按钮的逻辑;")])]),v._v(" "),t("p",[t("font",{attrs:{color:"red"}},[v._v("*")]),v._v(" 不是我自己独立开发的，大概10天左右")],1),v._v(" "),t("h2",{attrs:{id:"订单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订单"}},[v._v("#")]),v._v(" 订单")]),v._v(" "),t("h3",{attrs:{id:"使用vant-tab开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用vant-tab开发"}},[v._v("#")]),v._v(" 使用vant-Tab开发")]),v._v(" "),t("ul",[t("li",[v._v("包含的内容有")]),v._v(" "),t("li",[v._v("搜索")]),v._v(" "),t("li",[v._v("全部")]),v._v(" "),t("li",[v._v("待付款")]),v._v(" "),t("li",[v._v("代发货")]),v._v(" "),t("li",[v._v("待收货")]),v._v(" "),t("li",[v._v("待评价")])]),v._v(" "),t("h4",{attrs:{id:"订单的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订单的数据"}},[v._v("#")]),v._v(" 订单的数据")]),v._v(" "),t("ol",[t("li",[v._v("从vuex中的用户数据里获取订单变化")]),v._v(" "),t("li",[v._v("在mounted 发起订单数据请求，获取订单列表")]),v._v(" "),t("li",[v._v("分类的展示在tab选项卡里")])]),v._v(" "),t("h2",{attrs:{id:"用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户"}},[v._v("#")]),v._v(" 用户")]),v._v(" "),t("h3",{attrs:{id:"组成部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[v._v("#")]),v._v(" 组成部分")]),v._v(" "),t("ul",[t("li",[v._v("头像 数据来自于登录后接口返回的数据")]),v._v(" "),t("li",[v._v("修改用户信息 --\x3e 头像 --\x3e 修改密码 --\x3e 收货地址")]),v._v(" "),t("li",[v._v("修改密码：旧密码，手机号验证码")]),v._v(" "),t("li",[v._v("切换账户")]),v._v(" "),t("li",[v._v("退出登录")])])])}),[],!1,null,null,null);_.default=i.exports}}]);