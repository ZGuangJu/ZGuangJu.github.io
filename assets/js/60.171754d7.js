(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{551:function(v,e,_){"use strict";_.r(e);var t=_(2),o=Object(t.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("ol",[_("li",[_("code",[v._v("vue")]),v._v("是什么")])]),v._v(" "),_("ul",[_("li",[v._v("单页面应用框架，数据驱动视图，特性,数据的双向绑定，")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[_("code",[v._v("vue")]),v._v(" 核心的底层封装：数据双向绑定")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("2.x")]),v._v("用"),_("code",[v._v("object.defineProperty")]),v._v("封装，"),_("code",[v._v("3.x")]),v._v("用"),_("code",[v._v("es6")]),v._v("里的"),_("code",[v._v("proxy")]),v._v("封装")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[_("code",[v._v("vue")]),v._v("的数据流是什么（"),_("code",[v._v("reach")]),v._v("---单项数据流）")])]),v._v(" "),_("ul",[_("li",[v._v("单向数据流")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("vue常用指令")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("v-model")]),v._v(" ：数据双向绑定")]),v._v(" "),_("li",[_("code",[v._v("v-once")]),v._v("：只绑定一次")]),v._v(" "),_("li",[_("code",[v._v("v-if,v-else-if,v-else")]),v._v(" : 控制元素的加载与销毁")]),v._v(" "),_("li",[_("code",[v._v("v-show")]),v._v("：控制元素的显示和隐藏，控制display：none")]),v._v(" "),_("li",[_("code",[v._v("v-html")]),v._v(" ：解析"),_("code",[v._v("DOM")]),v._v("元素标签")]),v._v(" "),_("li",[_("code",[v._v("v-text")]),v._v(" ：解析文本，")]),v._v(" "),_("li",[_("code",[v._v("v-for")]),v._v(" ：使用"),_("code",[v._v("v-for")]),v._v("必须加"),_("code",[v._v("key")]),v._v("，")]),v._v(" "),_("li",[_("code",[v._v("v-bind")]),v._v("：绑定属性，传入变量，简写"),_("code",[v._v(":")])]),v._v(" "),_("li",[_("code",[v._v("v-on")]),v._v(" ：绑定事件，简写 "),_("code",[v._v("@")])]),v._v(" "),_("li",[_("code",[v._v("v-slot")]),v._v(" ：插槽 ，配合"),_("code",[v._v("template")]),v._v("使用")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("v-for循环一个对象/数组")])]),v._v(" "),_("ul",[_("li",[v._v("对象"),_("code",[v._v("（value,key,index）in obj")]),v._v("，"),_("code",[v._v("in")]),v._v("的前面是三个变量，分别是属性值，属性名，下标")]),v._v(" "),_("li",[v._v("数组"),_("code",[v._v("（value,index) in arr")]),v._v(" ，"),_("code",[v._v("in")]),v._v("的前面是两个变量，分别是值和下标")])]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[_("code",[v._v("v-for")]),v._v(" 里除了"),_("code",[v._v("in")]),v._v("还有哪种写法")])]),v._v(" "),_("ul",[_("li",[v._v("of")])]),v._v(" "),_("ol",{attrs:{start:"7"}},[_("li",[_("p",[v._v("事件修饰符\n"),_("code",[v._v("@click.stop")]),v._v(":【阻止冒泡】，\n"),_("code",[v._v("@click.prevent")]),v._v(":【阻止默认事件】\n"),_("code",[v._v("@click.once")]),v._v(":【只执行一次】，\n"),_("code",[v._v("@click.left")]),v._v(":【点击鼠标左键时触发】\n"),_("code",[v._v("@click.right")]),v._v(":【点击鼠标右键时触发】")])]),v._v(" "),_("li",[_("p",[v._v("按键修饰符\n"),_("code",[v._v("@keyUp.13")]),v._v("==="),_("code",[v._v("@keyUp.enter")]),v._v("【回车键弹起】，")])]),v._v(" "),_("li",[_("p",[v._v("动态加载组件")])])]),v._v(" "),_("ul",[_("li",[v._v("使用"),_("code",[v._v("vue")]),v._v("内置组件"),_("code",[v._v("components")]),v._v("，用"),_("code",[v._v("is")]),v._v("属性来动态加载组件\n实例代码：")])]),v._v(" "),_("div",{staticClass:"language-html extra-class"},[_("pre",{pre:!0,attrs:{class:"language-html"}},[_("code",[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("<")]),v._v("component")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token attr-name"}},[v._v(":is")]),_("span",{pre:!0,attrs:{class:"token attr-value"}},[_("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[v._v("=")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")]),v._v("ishome"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")])]),v._v("  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("/>")])]),v._v("\n&\n"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("<")]),v._v("home")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("/>")])]),v._v("\n")])])]),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" home "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'./home'")]),v._v("\ncomponents"),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    home\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),_("ol",{attrs:{start:"10"}},[_("li",[v._v("组件缓存")])]),v._v(" "),_("p",[v._v("使用 "),_("code",[v._v("<keep-alive></keep-alive>")]),v._v(",\n在"),_("code",[v._v("keep-alive")]),v._v("上使用 "),_("code",[v._v("include")]),v._v("，来缓存匹配到的组件\n在"),_("code",[v._v("keep-alive")]),v._v("上使用 "),_("code",[v._v("exclude")]),v._v("，来不缓存匹配到的组件")]),v._v(" "),_("ol",{attrs:{start:"11"}},[_("li",[_("p",[v._v("生命周期\n"),_("code",[v._v("beforeCreate")]),v._v(" "),_("code",[v._v("Created")]),v._v(" "),_("code",[v._v("beforeMount")]),v._v(" "),_("code",[v._v("mounted")]),v._v(" "),_("code",[v._v("beforeupdate")]),v._v(" "),_("code",[v._v("updated")]),v._v(" "),_("code",[v._v("beforeDestroy")]),v._v(" "),_("code",[v._v("destroyed")]),v._v("\n发起请求在mounted里\n清除定时器 ？？")])]),v._v(" "),_("li",[_("p",[v._v("懒加载")])])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[v._v("Home")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'./home.vue'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n")])])]),_("ol",{attrs:{start:"13"}},[_("li",[v._v("组件通信")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("父传子 用"),_("code",[v._v("props")]),v._v("【属性】传递")])]),v._v(" "),_("li",[_("p",[v._v("子传父 用自定义事件，在父组件给子组件绑定一个自定义事件"),_("code",[v._v("@【v-on】")]),v._v("，子组件用"),_("code",[v._v("@emit")]),v._v("去调用自定义事件，并把参数传给父组件")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("$bus")]),v._v(" 是一个第三方插件，中央事件广播，不受层级的限制")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第一种方法  props父组件向子组件传递")]),v._v(" "),_("strong",[v._v("主要传值，可以传方法，但不常用")]),v._v("\n父组件使用"),_("code",[v._v("v-bind")]),v._v(' 动态绑定数据 :自定义属性名="值"\n子组件使用'),_("code",[v._v("props")]),v._v(" 接收数据 "),_("code",[v._v("props")]),v._v('：["自定义属性名"]\n或者 props：{\n"自定义属性名"：{\ntype：Array，\ndefault：默认值，\nrequired：是否必填\n}\n}')])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第二种方法  @emit子组件向父组件传递")]),v._v(" "),_("strong",[v._v("可以传方法或值")]),v._v('\n子组件调用@emit()方法，这个方法接收两个参数\n$emit("自定义事件名称"（必写）,传递的值（可选）)\n父组件使用v-on 简写 @自定义事件名=""')])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第三种方法  $attrs 可以批量向下传递数据")]),v._v(" "),_("strong",[v._v("attributes属性的缩写，只传属性")]),v._v('\nattributes属性，只传属性\n$attrs 是组件（vue实例上）固有的用来描述该组件身上的所有属性集合的对象\n如果继续向下传递，在中间组件中 v-bind = "$attrs"')])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第四种方法  $listeners 批量向下传递方法")]),v._v(" "),_("strong",[v._v("只传方法")]),v._v('\n$listeners 是组件上的属性，用来保存组件身上的方法\n如果继续向下传递，使用v-on="$listeners"')])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第五种方法  Provide 和 Inject")]),v._v(" "),_("strong",[v._v("只传属性 ？")]),v._v("\n依赖注入，强制注入，可以扩展更深层的数据传递，在任何组件中都可以使用数据\n优点：可以跨组件获取数据（只能从上到下）,任何后代组件都能使用\n缺点：只能从上到下\n使用Provide 和 Inje ct实例选项，注入过来的数据，成为接收组件的属性，")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第六种方法  ref的使用")]),v._v(" "),_("strong",[v._v("属性和方法")]),v._v("\nref：是string类型，主要用来给dom元素或子组件注册引用信息，引用信息会注册在父组件的$refs对象上\n$refs :类型是object对象，持有已注册过的ref的所有子组件，（保存了所有注册过的子组件）\n①如果在普通的DOM元素上使用，那么引用的注册信息指向DOM元素，\n②如果在组件上使用，引用指向的是组件实例对象，那么可以获取到组件上的属性或者方法")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第七种方法  EventBus")]),v._v(" "),_("strong",[v._v("？")]),v._v('\n原理：创建一个vue实例，调用实例上的方法，\n1、发送：$emit("自定义事件名称",要传的值),发送事件\n2、接收：$on("自定义事件名称",function（接收的值）{ 函数的参数是发送时的值}),接收/监听事件\n能实现各个组件之间的通信，（父子，兄弟，跨组件）\n在main.js中创建一个全新的vue实例，\nVue.prototype.$bus = new Vue()')])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第八种方法  $parents  $children")]),v._v(" "),_("strong",[v._v("属性和方法")]),v._v("\n$parents:当前组件的直接父组件，\n$children:组件的直接子组件（如果有子组件），子组件会被展示成数组，没有子组件是空数组")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("第九种方法  vuex")])])])]),v._v(" "),_("ol",{attrs:{start:"14"}},[_("li",[v._v("vue的递归组件")])]),v._v(" "),_("ul",[_("li",[v._v("一个组件接收父组件传递过来的数据，进行自我调用，需要一个结束的判断，另外该组件还必须要有name属性")])]),v._v(" "),_("ol",{attrs:{start:"15"}},[_("li",[_("p",[v._v("作用域\n在style标签上加scoped，使css只对当前组件生效")])]),v._v(" "),_("li",[_("p",[v._v("vue组件的实例组成部分")])])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("name")]),v._v(":组件名字")]),v._v(" "),_("li",[_("code",[v._v("data")]),v._v(":数据")]),v._v(" "),_("li",[_("code",[v._v("components")]),v._v(":局部组件")]),v._v(" "),_("li",[_("code",[v._v("computed")]),v._v(":计算")]),v._v(" "),_("li",[_("code",[v._v("watch")]),v._v(":监听")]),v._v(" "),_("li",[_("code",[v._v("methods")]),v._v(":方法的集合")]),v._v(" "),_("li",[_("code",[v._v("filter")]),v._v(":自定义过滤函数")]),v._v(" "),_("li",[_("code",[v._v("directives")]),v._v(":自定义指令")]),v._v(" "),_("li",[_("code",[v._v("minxins")]),v._v(" :混入 将公共的一些实例上的配置做成一个单独的"),_("code",[v._v("mixins")]),v._v("文件，引进来之后，和我们实例上的配置做一个合并，说白了，就是给组件功能的扩展")]),v._v(" "),_("li",[v._v("自定义指令")]),v._v(" "),_("li",[v._v("生命周期")])]),v._v(" "),_("ol",{attrs:{start:"17"}},[_("li",[_("p",[_("code",[v._v("computed")]),v._v(" 【计算】"),_("code",[v._v("watch")]),v._v(" 【监听】的区别")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("computed")]),v._v("计算属性有缓存，"),_("code",[v._v("watch")]),v._v("没有缓存，\n因为"),_("code",[v._v("computed")]),v._v(" 有缓存，当"),_("code",[v._v("computed")]),v._v("监听的数据发生改变时，会对比缓存值，如果新值和旧值一样，则不会触发更新")]),v._v(" "),_("li",[_("code",[v._v("watch")]),v._v("执行是只要被监听的数据发生了改变，就会执行")]),v._v(" "),_("li",[_("code",[v._v("computed")]),v._v("监听一个数据还要返回一个数据，"),_("code",[v._v("watch")]),v._v("只是监听")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("watch")]),v._v("的深度监听 加 "),_("code",[v._v("deep:true")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);